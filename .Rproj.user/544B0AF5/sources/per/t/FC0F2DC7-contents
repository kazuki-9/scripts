#The development version:
library(devtools)
devtools::install_github("carlos-alberto-silva/ForestGapR")

library(terra)
library(tiff)
library(viridis)
library(raster)





my_input_dir <- file.path('G:/Temp/B/Uchino/data/chm')

# list all tif files
my_tif_files <- list.files(my_input_dir,
                           pattern = '*.tif',
                           full.names = T)

# assign CRS
chm.2 <- rast(my_tif_files[2])
crs(chm.2) <- "EPSG:25832"

#################### for chm.1 ############################
# {
# # read one raster CHM
# chm.1 <- rast(my_tif_files[1])
# chm.1 # resolution = 0.5 m x 0.5 m = 50 cm2
# rast
# 
# crs(chm.1) <- "EPSG:25832"
# chm.1
# terra::size(chm.1)
# 
# # plotting
# terra::plot(chm.1)# forest canopy gap ----
# 
# # Plotting chm
# plot(chm.1, col=viridis(10))
# }
# gaps_duc <- ForestGapR::getForestGaps(chm_layer = chm.1, threshold=threshold, size=size)
# ?getForestGaps
# 
# plot(gaps_duc, col="red", add=TRUE, main="Forest Canopy Gap", legend=FALSE)
# 
###########################################################

# Setting height thresholds (e.g. 10 meters)
threshold<- 20
size<-c(1,1000) # m2. The max and min size to include. Outside this range is not 
# considered as a 'gap'

# plotting chm.2
plot(chm.2, col = viridis(10))

# gap encoding, plot the map & gaps, get stats at the same time
{
gaps_chm.2 <- ForestGapR::getForestGaps(chm_layer = chm.2, threshold = 15, size = size)
plot(chm.2, col = viridis(10))
plot(gaps_chm.2, col="red", add=TRUE, main="Forest Canopy Gap", legend=FALSE)
gaps_stats_chm.2 <- ForestGapR::GapStats(gap_layer = gaps_chm.2, chm_layer = chm.2)
print(gaps_stats_chm.2)
}


# for (i in nthresholds) {
#   gaps_i <- ForestGapR::getForestGaps(chm_layer = chm.2, threshold = i, size = size)
#   names(gaps_i) <- paste0("gaps_", i, "m")
#   gaps_stack <- raster::stack(gaps_stack, gaps_i)
# } # 2024/5/6 maybe not needed?

# Create an empty list to store raster layers ----
gaps_layers <- list()

# get gaps with ForestGapR()
nthresholds <- c(10, 12, 15, 20, 25)

for (i in nthresholds) {
  gaps_i <- ForestGapR::getForestGaps(chm_layer = chm.2, threshold = i, size = size)
  names(gaps_i) <- paste0("gaps_", i, "m")
  
  # Add the current forest gap raster layer to the list
  gaps_layers[[length(gaps_layers) + 1]] <- gaps_i
}

str(gaps_layers) #see the outcome of the list of layers

# plot gaps
{
oldpar <- par(no.readonly = TRUE)
par(mfrow = c(2, 3))

plot(chm.2, col = viridis(10), main = "Height threshold 10m")
plot(gaps_layers[[1]], col = "red", add = TRUE, legend = FALSE)


plot(chm.2, col = viridis(10), main = "Height threshold 12m")
plot(gaps_layers[[2]], col = "red", add = TRUE, legend = FALSE)

plot(chm.2, col = viridis(10), main = "Height threshold 15m")
plot(gaps_layers[[3]], col = "red", add = TRUE, legend = FALSE)

plot(chm.2, col = viridis(10), main = "Height threshold 20m")
plot(gaps_layers[[4]], col = "red", add = TRUE, legend = FALSE)

plot(chm.2, col = viridis(10), main = "Height threshold 25m")
plot(gaps_layers[[5]], col = "red", add = TRUE, legend = FALSE)

plot(chm.2, col = viridis(10), main = "Template")
}

par(oldpar)

# get gap stats ----
{
stats.1 <- ForestGapR::GapStats(gap_layer = gaps_layers[[1]], chm_layer = chm.2)
stats.2 <- ForestGapR::GapStats(gap_layer = gaps_layers[[2]], chm_layer = chm.2)
stats.3 <- ForestGapR::GapStats(gap_layer = gaps_layers[[3]], chm_layer = chm.2)
stats.4 <- ForestGapR::GapStats(gap_layer = gaps_layers[[4]], chm_layer = chm.2)
stats.5 <- ForestGapR::GapStats(gap_layer = gaps_layers[[5]], chm_layer = chm.2)
}

  # for loop version (under development)
stats_list <- list()
# for (i in length(gaps_layers)) { # fix required
#  stats_list[i] <- ForestGapR::GapStats(gap_layer = gaps_layers[[i]], chm_layer = chm.2)
# } 

stats.1 <- as.data.frame(stats.1)

sum(stats.1$gap_area)

# save as csv
write.csv2(stats.1, "stats_tif_2_10m.csv", row.names = F)
write.csv2(stats.2, "stats_tif_2_12m.csv", row.names = F)
write.csv2(stats.3, "stats_tif_2_15m.csv", row.names = F)
write.csv2(stats.4, "stats_tif_2_20m.csv", row.names = F)
write.csv2(stats.5, "stats_tif_2_25m.csv", row.names = F)

